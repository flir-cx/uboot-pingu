/*
 * Copyright (C) 2015 FLIR Systems.
 *
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#define __ASSEMBLY__
#include <config.h>

/* image version */

IMAGE_VERSION 2

/*
 * Boot Device : one of
 * spi, sd DATA 4.the board has no nand neither onenand
 */

BOOT_FROM	sd

/*
 * Device Configuration Data DATA 4.DCD
 *
 * Each entry must have the format:
 * Addr-type           Address        Value
 *
 * where:
 *	Addr-type register length DATA 4.1,2 or 4 bytes
 *	Address	  absolute address of the register
 *	value	  value to be stored in the register
 */



//=============================================================================
//init script for i.MX6QP LPDDR2
//=============================================================================
// Revision History
// v1.5	Fixed Mode Only
//=============================================================================

//wait = on	// uncomment if using debugger
//=============================================================================
// Disable	WDOG
//=============================================================================
//setmem /16	0x020bc000 =	0x30	// uncomment if using debugger

//=============================================================================
// Enable all clocks (they are disabled by ROM code)
//=============================================================================
DATA 4 0x020c4068 0x00C03F3F
DATA 4 0x020c406c 0x0030FC03
DATA 4 0x020c4070 0x0FFFC000
DATA 4 0x020c4074 0x3FF00000
DATA 4 0x020c4078 0x00FFF300
DATA 4 0x020c407c 0x0F0000C3
DATA 4 0x020c4080 0x000003FF

DATA 4  0x020c4018   0x00060324 //DDR clk to 400MHz
//=============================================================================
// IOMUX
//=============================================================================
//DDR IO TYPE:
DATA 4 0x020e0798 0x00080000	// IOMUXC_SW_PAD_CTL_GRP_DDR_TYPE
DATA 4 0x020e0758 0x00000000	// IOMUXC_SW_PAD_CTL_GRP_DDRPKE

//CLOCK:
DATA 4 0x020e0588 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK_0
DATA 4 0x020e0594 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK_1

//ADDRESS:
DATA 4 0x020e056c 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_CAS
DATA 4 0x020e0578 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_RAS
DATA 4 0x020e074c 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_ADDDS

//CONTROL:
DATA 4 0x020e057c 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_RESET

DATA 4 0x020e058c 0x00000000	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDBA2 - DSE can be configured using Group Control Register: IOMUXC_SW_PAD_CTL_GRP_CTLDS
DATA 4 0x020e059c 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT0
DATA 4 0x020e05a0 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT1
DATA 4 0x020e078c 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_CTLDS

//DATA STROBE:
DATA 4 0x020e0750 0x00020000	// IOMUXC_SW_PAD_CTL_GRP_DDRMODE_CTL

DATA 4 0x020e05a8 0x00003030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS0
DATA 4 0x020e05b0 0x00003030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS1
DATA 4 0x020e0524 0x00003030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS2
DATA 4 0x020e051c 0x00003030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS3
//DATA 4 0x020e0518 0x00003030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS4
//DATA 4 0x020e050c 0x00003030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS5
//DATA 4 0x020e05b8 0x00003030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS6
//DATA 4 0x020e05c0 0x00003030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS7

//DATA:
DATA 4 0x020e0774 0x00020000	// IOMUXC_SW_PAD_CTL_GRP_DDRMODE

DATA 4 0x020e0784 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B0DS
DATA 4 0x020e0788 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B1DS
DATA 4 0x020e0794 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B2DS
DATA 4 0x020e079c 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B3DS
//DATA 4 0x020e07a0 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B4DS
//DATA 4 0x020e07a4 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B5DS
//DATA 4 0x020e07a8 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B6DS
//DATA 4 0x020e0748 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B7DS

DATA 4 0x020e05ac 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM0
DATA 4 0x020e05b4 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM1
DATA 4 0x020e0528 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM2
DATA 4 0x020e0520 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM3
//DATA 4 0x020e0514 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM4
//DATA 4 0x020e0510 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM5
//DATA 4 0x020e05bc 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM6
//DATA 4 0x020e05c4 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM7

//=============================================================================
// DDR Controller Registers
//=============================================================================
// Manufacturer:	Nanya
// Device Part Number:	NT6TL128M32BA
// Clock Freq.: 	400MHz
// Density per CS in Gb: 	4
// Chip Selects used:	1
// Number of Banks:	8
// Row address:    	14
// Column address: 	10
// DATA bus width	32
//=============================================================================

// MMDC0_MDSCR, set the Configuration request bit during MMDC set up
DATA 4 0x021b001c 0x00008000	// Chan 0
//DATA 4 0x021b401c 0x00008000	// Chan 1

DATA 4 0x021b085c 0x1B4700C7	//LPDDR2 ZQ params
//DATA 4 0x021b485c 0x1B4700C7	//LPDDR2 ZQ params

// values for CA bus delay were optimized for the validation board, where the setting of 0x00400000 is the default value
DATA 4 0x021b0890 0x00480C58	// MMDC0_MPPDCMPR2: ZQ_PU_OFFSET and ZQ_PD_OFFSET optimal settings
//DATA 4 0x021b4890 0x00480C58	// MMDC0_MPPDCMPR2: ZQ_PU_OFFSET and ZQ_PD_OFFSET optimal settings
DATA 4 0x021b0800 0xA1390003	// DDR_PHY_P0_MPZQHWCTRL, enable both one-time & periodic HW ZQ calibration.
//DATA 4 0x021b4800 0xA1380003	// DDR_PHY_P1_MPZQHWCTRL, enable periodic HW ZQ calibration.

DATA 4 0x021b080c 0x00000000
DATA 4 0x021b0810 0x00000000
//DATA 4 0x021b480c 0x00000000
//DATA 4 0x021b4810 0x00000000

//######################################################
//calibration values based on calibration compare of 0x00ffff00:
//Note, these calibration values are based on NXP's board
//May need to run calibration on target board to fine tune these
//######################################################

//Read calibration
DATA 4 0x021b0848 0x4C1E4A4E	// MPRDDLCTL PHY0
//DATA 4 0x021b4848 0x3C3C3846	// MPRDDLCTL PHY1

//Write calibration
DATA 4 0x021b0850 0x36383838	// MPWRDLCTL PHY0
//DATA 4 0x021b4850 0x38283E34	// MPWRDLCTL PHY1

//read data bit delay: (3 is the reccommended default value, although out of reset value is 0):
DATA 4 0x021b081c 0x33333333	// DDR_PHY_P0_MPREDQBY0DL3
DATA 4 0x021b0820 0x33333333	// DDR_PHY_P0_MPREDQBY1DL3
DATA 4 0x021b0824 0x33333333	// DDR_PHY_P0_MPREDQBY2DL3
DATA 4 0x021b0828 0x33333333	// DDR_PHY_P0_MPREDQBY3DL3
//DATA 4 0x021b481c 0x33333333	// DDR_PHY_P1_MPREDQBY0DL3
//DATA 4 0x021b4820 0x33333333	// DDR_PHY_P1_MPREDQBY1DL3
//DATA 4 0x021b4824 0x33333333	// DDR_PHY_P1_MPREDQBY2DL3
//DATA 4 0x021b4828 0x33333333	// DDR_PHY_P1_MPREDQBY3DL3

DATA 4 0x021b08c0 0x24912249	// fine tune SDCLK duty cyc to low - Engineering Bulletin EB828
//DATA 4 0x021b48c0 0x24914289

// Complete calibration by forced measurement:
DATA 4 0x021b08b8 0x00000800 	// DDR_PHY_P0_MPMUR0, frc_msr
//DATA 4 0x021b48b8 0x00000800 	// DDR_PHY_P0_MPMUR0, frc_msr

//MMDC init Ch0:
DATA 4 0x021b0018 0x00001602	// Perform software reset of MMDC prior to initializing its registers
DATA 4 0x021b0004 0x00020024	// MMDC0_MDPDC
DATA 4 0x021b0008 0x00000000	// MMDC0_MDOTC
DATA 4 0x021b000c 0x33374135	// MMDC0_MDCFG0
DATA 4 0x021b0010 0x00100A83	// MMDC0_MDCFG1
DATA 4 0x021b0014 0x00000093	// MMDC0_MDCFG2
DATA 4 0x021b0018 0x000016CC	// MMDC0_MDMISC
DATA 4 0x021b002c 0x0F9F26D2	// MMDC0_MDRWD; recommend to maintain the default values
DATA 4 0x021b0030 0x009F0E10	// MMDC0_MDOR
DATA 4 0x021b0038 0x001A0889	// MMDC0_MDCFG3LP
DATA 4 0x021b0040 0x0000004F	// CS0_END
DATA 4 0x021b0400 0x514201F0	// adopt bypass only if NOC schedular enabled Ch0
DATA 4 0x021b0000 0x83110000	// MMDC0_MDCTL

//MMDC init Ch1:
//DATA 4 0x021b4018 0x00001602	// Perform software reset of MMDC prior to initializing its registers
//DATA 4 0x021b4004 0x00020024	// MMDC1_MDPDC
//DATA 4 0x021b4008 0x00000000	// MMDC1_MDOTC
//DATA 4 0x021b400c 0x33374135	// MMDC1_MDCFG0
//DATA 4 0x021b4010 0x00100A83	// MMDC1_MDCFG1
//DATA 4 0x021b4014 0x00000093	// MMDC1_MDCFG2
//DATA 4 0x021b4018 0x000016CC	// MMDC1_MDMISC
//DATA 4 0x021b402c 0x0F9F26D2	// MMDC1_MDRWD; recommend to maintain the default values
//DATA 4 0x021b4030 0x009F0E10	// MMDC1_MDOR
//DATA 4 0x021b4038 0x001A0889	// MMDC1_MDCFG3LP
//DATA 4 0x021b4040 0x00000017	// CS0_END
//DATA 4 0x021b4000 0x83110000	// MMDC1_MDCTL


//########################################################
//## NOC DDR configuration
DATA 4 0x00bb0008 0x00000003	// NoC DDRCONF
DATA 4 0x00bb000c 0x9CC9B49A	// NoC DDRTIMING according to MMDC0_MDCFG0/1/2
DATA 4 0x00bb0038 0x00000544	// NoC Activate
DATA 4 0x00bb0014 0x00000040 	// NoC Read latency
DATA 4 0x00bb0028 0x00000020 	// NoC Aging control for IPU1/PRE0/PRE3
DATA 4 0x00bb002c 0x00000020 	// NoC Aging control for IPU2/PRE1/PRE2
DATA 4 0x00BB0010 0x00000000	// DDRMODE, contains extended MSB of BwRatio field, which is zero for 64- and 32-bit wide DDR memories.
//######################################################

// Mode register writes, CH0, CS0
DATA 4 0x021b001c 0x00008010	// PRE-CHARGE ALL
DATA 4 0x021b001c 0x003F8030	// MRW: BA=0 CS=0 MR_ADDR=63 MR_OP=0 (Reset)
DATA 4 0x021b001c 0xff (IO calibration, calibration code)
DATA 4 0x021b001c 0x021b001c =	0x06028030	// MRW: BA=0 CS=0 MR_ADDR=2  MR_OP=see Register Configuration
DATA 4 0x021b001c 0x01038030	// MRW: BA=0 CS=0 MR_ADDR=3  MR_OP=see Register Configuration

// Mode register writes, CH0, CS1
//DATA 4 0x021b001c 0x00008018	// PRE-CHARGE ALL
//DATA 4 0x021b001c 0x003F8038	// MRW: BA=0 CS=1 MR_ADDR=63 MR_OP=0 (Reset)
//DATA 4 0x021b001c 0xff (IO calibration, calibration code)
//DATA 4 0x021b001c 0x021b001c =	0x06028038	// MRW: BA=0 CS=1 MR_ADDR=2  MR_OP=see Register Configuration
//DATA 4 0x021b001c 0x01038038	// MRW: BA=0 CS=1 MR_ADDR=3  MR_OP=see Register Configuration

// Mode register writes, CH1, CS0
DATA 4 0x021b401c 0x00008010	// PRE-CHARGE ALL
DATA 4 0x021b401c 0x003F8030	// MRW: BA=0 CS=0 MR_ADDR=63 MR_OP=0 (Reset)
DATA 4 0x021b401c 0xff (IO calibration, calibration code)
DATA 4 0x021b401c 0x021b401c =	0x06028030	// MRW: BA=0 CS=0 MR_ADDR=2  MR_OP=see Register Configuration
DATA 4 0x021b401c 0x021b401c =	0x00008018	// PRE-CHARGE ALL
//DATA 4 0x021b401c 0x003F8038	// MRW: BA=0 CS=1 MR_ADDR=63 MR_OP=0 (Reset)
//DATA 4 0x021b401c 0xff (IO calibration, calibration code)
//DATA 4 0x021b401c 0x021b401c =	0x06028038	// MRW: BA=0 CS=1 MR_ADDR=2  MR_OP=see Register Configuration
//DATA 4 0x021b401c 0x021b083c =	0xA0000000	// Reset read FIFO (perform twice to ensure reset) and PHY0 dqs gating dis
DATA 4 0x021b083c 0xA0000000	// Reset read FIFO (perform twice to ensure reset) and PHY0 dqs gating dis
DATA 4 0x021b083c 0xA0000000	// Reset read FIFO (perform twice to ensure reset) and PHY0 dqs gating dis
//DATA 4 0x021b483c 0xA0000000	// Reset read FIFO (perform twice to ensure reset) and PHY1 dqs gating dis
//DATA 4 0x021b483c 0xA0000000	// Reset read FIFO (perform twice to ensure reset) and PHY1 dqs gating dis

DATA 4 0x021b08b8 0x00000800	// DDR_PHY_P0_MPMUR0, frc_msr to update PHY with register changes
//DATA 4 0x021b48b8 0x00000800	// DDR_PHY_P1_MPMUR0, frc_msr to update PHY with register changes

DATA 4 0x021b0020 0x00001800	// MMDC0_MDREF
//DATA 4 0x021b4020 0x00001800	// MMDC1_MDREF

DATA 4 0x021b0818 0x00000000	// DDR_PHY_P0_MPODTCTRL
//DATA 4 0x021b4818 0x00000000	// DDR_PHY_P1_MPODTCTRL

DATA 4 0x021b0004 0x00025564	// MMDC0_MDPDC with PWDT bits set
//DATA 4 0x021b4004 0x00025564	// MMDC1_MDPDC with PWDT bits set

DATA 4 0x021b0404 0x00011006	// MMDC0_MAPSR ADOPT power down enabled, MMDC will enter automatically to self-refresh while the number of idle cycle reached.
//DATA 4 0x021b4404 0x00011006	// MMDC1_MAPSR ADOPT power down enabled, MMDC will enter automatically to self-refresh while the number of idle cycle reached.

DATA 4 0x021b001c 0x00000000	// MMDC0_MDSCR, clear this register (especially the configuration bit as initialization is complete)
//DATA 4 0x021b401c 0x00000000	// MMDC1_MDSCR, clear this register (especially the configuration bit as initialization is complete)
